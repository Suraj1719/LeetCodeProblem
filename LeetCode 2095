Problem number : (2095) Delete the Middle Node of a Linked List
//java code
//aproach-1(count the size and find mid value node and delete it)
class Solution {
    public ListNode deleteMiddle(ListNode head) {
        
        ListNode cur=head;int size=0;
        while(cur!=null){
            size++;
            cur=cur.next;
        }
        if(size==1)
            return null;
        if(size==2){
            head.next=null;
            return head;
        }
            
        int mid=-1;
        mid=size/2;
        ListNode temp=head;
        int pos=1;
        while(pos<mid){
            pos++;
            temp=temp.next;
        }
        temp.next=temp.next.next;
        
        return head;
        
    }
}
//aproach-2(simultaneously take slow and fast node and delete slow node )
class Solution {
    public ListNode deleteMiddle(ListNode head) {
        //second approach
        if(head.next==null)
            return null;
        ListNode fast=head;
        ListNode slow=head;
        ListNode prev=null;
        while(fast!=null && fast.next!=null){
            fast=fast.next.next;
            prev=slow;
            slow=slow.next;
        }
        prev.next=prev.next.next;
        return head;
    }
}
